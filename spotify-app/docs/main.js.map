{"version":3,"sources":["./src/app/search/add-items-to-playlists/add-items-to-playlists.component.ts","./src/app/search/add-items-to-playlists/add-items-to-playlists.component.html","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/app/search/search-steps-buttons/search-steps-buttons.component.ts","./src/app/search/search-steps-buttons/search-steps-buttons.component.html","./src/app/search/search-playlists/search-playlists.component.html","./src/app/search/search-playlists/search-playlists.component.ts","./src/app/search/search-episodes/search-episodes.component.ts","./src/app/search/search-episodes/search-episodes.component.html","./src/environments/environment.ts","./src/app/cards/cards.component.ts","./src/app/cards/cards.component.html","./src/app/create-playlists/playlists-images/playlists-images.component.ts","./src/app/create-playlists/playlists-images/playlists-images.component.html","./src/app/search/search-component/search.component.ts","./src/app/search/search-component/search.component.html","./src/app/services/authentication-service.ts","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/search/search-artists/search-artists.component.html","./src/app/search/search-artists/search-artists.component.ts","./src/app/search/search-albums/search-albums.component.html","./src/app/search/search-albums/search-albums.component.ts","./src/app/services/browse-api-services.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/search/search-shows/search-shows.component.html","./src/app/search/search-shows/search-shows.component.ts","./src/app/search/add-items-to-playlists/pop-up/pop-up.component.ts","./src/app/search/add-items-to-playlists/pop-up/pop-up.component.html","./src/app/app.module.ts","./src/app/playlists/playlists.component.ts","./src/app/playlists/playlists.component.html","./src/app/playlists/playlist-tracks-modal/playlist-tracks-modal.component.ts","./src/app/playlists/playlist-tracks-modal/playlist-tracks-modal.component.html","./src/app/create-playlists/error-message.ts","./src/app/create-playlists/error-message.html","./src/app/songs/songs.component.ts","./src/app/songs/songs.component.html","./src/app/services/spotify-services.ts","./src/app/search/search-tracks/search-tracks.component.ts","./src/app/search/search-tracks/search-tracks.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/create-playlists/create-playlists.component.ts","./src/app/create-playlists/create-playlists.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PopUpAddToPlaylistsComponent } from './pop-up/pop-up.component';\r\n@Component({\r\n  selector: 'app-add-items-to-playlists',\r\n  templateUrl: './add-items-to-playlists.component.html',\r\n  styleUrls: ['./add-items-to-playlists.component.scss']\r\n})\r\nexport class AddItemsToPlaylistsComponent {\r\n  @Input() selectedId: string | undefined;\r\n\r\n  @Input() selectedUri: string | undefined;\r\n\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  openDialog(selectedId: string | undefined) {\r\n    const dialogRef = this.dialog.open(PopUpAddToPlaylistsComponent, {\r\n      data: {\r\n        id: selectedId,\r\n        uri: this.selectedUri\r\n      }\r\n    });\r\n    console.log('from child dialog :', selectedId);\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n    return dialogRef;\r\n  }\r\n}\r\n","<button mat-button (click)=\"openDialog(selectedId)\">Ajouter</button>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"navbar\">\r\n  <div>Spotify-full-app</div>\r\n  <div class=\"side-bar-items-wrapper\">\r\n    <span routerLink=\"/homepage\" routerLinkActive=\"active-link\">Home</span>\r\n    <span routerLink=\"/search\" routerLinkActive=\"active-link\">Search</span>\r\n    <span routerLink=\"/create-playlists\" routerLinkActive=\"active-link\"\r\n      >Create playlists</span\r\n    >\r\n    <span routerLink=\"/playlists\" routerLinkActive=\"active-link\"\r\n      >My playlists</span\r\n    >\r\n    <span routerLink=\"/songs\" routerLinkActive=\"active-link\">Songs</span>\r\n  </div>\r\n</mat-toolbar>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SpotifyServices } from 'src/app/services/spotify-services';\r\nimport { Output, EventEmitter } from '@angular/core';\r\nimport { SpotifyApi } from 'src/app/models/@types';\r\n\r\n@Component({\r\n  selector: 'app-search-steps-buttons',\r\n  templateUrl: './search-steps-buttons.component.html',\r\n  styleUrls: ['./search-steps-buttons.component.scss']\r\n})\r\nexport class SearchStepsButtonsComponent implements OnInit {\r\n  @Input() Previous: string | null = null;\r\n  @Input() Next: string | null = '';\r\n  @Input() ItemName?: string;\r\n\r\n  @Input() albumsData?: SpotifyApi.IAlbums;\r\n  @Input() albumsPrevious: string | null = null;\r\n  @Input() albumsNext: string | null = '';\r\n\r\n  @Input() tracksData?: SpotifyApi.ITracks;\r\n  @Input() tracksPrevious: string | null = null;\r\n  @Input() tracksNext: string | null = '';\r\n\r\n  @Input() artistsData?: SpotifyApi.IArtists;\r\n  @Input() artistsPrevious: string | null = null;\r\n  @Input() artistsNext: string | null = '';\r\n\r\n  @Input() playlistsData?: SpotifyApi.IPlaylists;\r\n  @Input() playlistsPrevious: string | null = null;\r\n  @Input() playlistsNext: string | null = '';\r\n\r\n  @Input() showsData?: SpotifyApi.IShows;\r\n  @Input() showsPrevious: string | null = null;\r\n  @Input() showsNext: string | null = '';\r\n\r\n  @Input() episodesData?: SpotifyApi.IEpisodes;\r\n  @Input() episodesPrevious: string | null = null;\r\n  @Input() episodesNext: string | null = '';\r\n\r\n  @Output() newAlbumsItemEvent = new EventEmitter<any>();\r\n  @Output() newAlbumsPreviousEvent = new EventEmitter<any>();\r\n  @Output() newAlbumsNextEvent = new EventEmitter<any>();\r\n\r\n  @Output() newTracksItemEvent = new EventEmitter<any>();\r\n  @Output() newTracksPreviousEvent = new EventEmitter<any>();\r\n  @Output() newTracksNextEvent = new EventEmitter<any>();\r\n\r\n  @Output() newArtistsItemEvent = new EventEmitter<any>();\r\n  @Output() newArtistsPreviousEvent = new EventEmitter<any>();\r\n  @Output() newArtistsNextEvent = new EventEmitter<any>();\r\n\r\n  @Output() newPlaylistsItemEvent = new EventEmitter<any>();\r\n  @Output() newPlaylistsPreviousEvent = new EventEmitter<any>();\r\n  @Output() newPlaylistsNextEvent = new EventEmitter<any>();\r\n\r\n  @Output() newShowsItemEvent = new EventEmitter<any>();\r\n  @Output() newShowsPreviousEvent = new EventEmitter<any>();\r\n  @Output() newShowsNextEvent = new EventEmitter<any>();\r\n\r\n  @Output() newEpisodesItemEvent = new EventEmitter<any>();\r\n  @Output() newEpisodesPreviousEvent = new EventEmitter<any>();\r\n  @Output() newEpisodesNextEvent = new EventEmitter<any>();\r\n\r\n  albumsItems: SpotifyApi.IAlbums[] = [];\r\n  tracksItems: SpotifyApi.ITracks[] = [];\r\n  artistsItems: SpotifyApi.IArtists[] = [];\r\n  playlistsItems: SpotifyApi.IPlaylists[] = [];\r\n  showsItems: SpotifyApi.IShows[] = [];\r\n  episodesItems: SpotifyApi.IEpisodes[] = [];\r\n\r\n  constructor(private spotifyServices: SpotifyServices) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.Next === '' && this.ItemName === 'Albums') {\r\n      this.Next = this.albumsData!.next;\r\n    }\r\n    if (this.Next == '' && this.ItemName === 'Tracks') {\r\n      this.Next = this.tracksData!.next;\r\n    }\r\n    if (this.Next === '' && this.ItemName === 'Artists') {\r\n      this.Next = this.artistsData!.next;\r\n    }\r\n    if (this.Next === '' && this.ItemName === 'Playlists') {\r\n      this.Next = this.playlistsData!.next;\r\n    }\r\n    if (this.Next === '' && this.ItemName === 'Shows') {\r\n      this.Next = this.showsData!.next;\r\n    }\r\n    if (this.Next === '' && this.ItemName === 'Episodes') {\r\n      this.Next = this.episodesData!.next;\r\n    }\r\n  }\r\n\r\n  getPreviousList(value: string | null, itemName: string | undefined) {\r\n    if (value !== null && itemName !== undefined) {\r\n      this.spotifyServices.searchOtherResult(value).subscribe((res) => {\r\n        if (itemName === 'Albums') {\r\n          this.albumsItems = (res as any).albums.items;\r\n          this.albumsPrevious = (res as any).albums.previous;\r\n          this.albumsNext = (res as any).albums.next;\r\n\r\n          this.addNewAlbumsItem(this.albumsItems);\r\n          this.refreshAlbumsPrevious(this.albumsPrevious);\r\n          this.refreshAlbumsNext(this.albumsNext);\r\n        } else if (itemName === 'Tracks') {\r\n          this.tracksItems = (res as any).tracks.items;\r\n          this.tracksPrevious = (res as any).tracks.previous;\r\n          this.tracksNext = (res as any).tracks.next;\r\n\r\n          this.addNewTracksItem(this.tracksItems);\r\n          this.refreshTracksPrevious(this.tracksPrevious);\r\n          this.refreshTracksNext(this.tracksNext);\r\n        } else if (itemName === 'Artists') {\r\n          this.artistsItems = (res as any).artists.items;\r\n          this.artistsPrevious = (res as any).artists.previous;\r\n          this.artistsNext = (res as any).artists.next;\r\n\r\n          this.addNewArtistsItem(this.artistsItems);\r\n          this.refreshArtistsPrevious(this.artistsPrevious);\r\n          this.refreshArtistsNext(this.artistsNext);\r\n        } else if (itemName === 'Playlists') {\r\n          this.playlistsItems = (res as any).playlists.items;\r\n          this.playlistsPrevious = (res as any).playlists.previous;\r\n          this.playlistsNext = (res as any).playlists.next;\r\n\r\n          this.addNewPlaylistsItem(this.playlistsItems);\r\n          this.refreshPlaylistsPrevious(this.playlistsPrevious);\r\n          this.refreshPlaylistsNext(this.playlistsNext);\r\n        } else if (itemName === 'Shows') {\r\n          this.showsItems = (res as any).shows.items;\r\n          this.showsPrevious = (res as any).shows.previous;\r\n          this.showsNext = (res as any).shows.next;\r\n\r\n          this.addNewShowsItem(this.showsItems);\r\n          this.refreshShowsPrevious(this.showsPrevious);\r\n          this.refreshShowsNext(this.showsNext);\r\n        } else if (itemName === 'Episodes') {\r\n          this.episodesItems = (res as any).episodes.items;\r\n          this.episodesPrevious = (res as any).episodes.previous;\r\n          this.episodesNext = (res as any).episodes.next;\r\n\r\n          this.addNewEpisodesItem(this.episodesItems);\r\n          this.refreshEpisodesPrevious(this.episodesPrevious);\r\n          this.refreshEpisodesNext(this.episodesNext);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  getNextList(value: string | null, itemName: string | undefined) {\r\n    if (value !== null && itemName !== undefined) {\r\n      this.spotifyServices.searchOtherResult(value).subscribe((res) => {\r\n        if (itemName === 'Albums') {\r\n          this.albumsItems = (res as any).albums.items;\r\n          this.albumsPrevious = (res as any).albums.previous;\r\n          this.albumsNext = (res as any).albums.next;\r\n\r\n          this.addNewAlbumsItem(this.albumsItems);\r\n          this.refreshAlbumsPrevious(this.albumsPrevious);\r\n          this.refreshAlbumsNext(this.albumsNext);\r\n        } else if (itemName === 'Tracks') {\r\n          this.tracksItems = (res as any).tracks.items;\r\n          this.tracksPrevious = (res as any).tracks.previous;\r\n          this.tracksNext = (res as any).tracks.next;\r\n\r\n          this.addNewTracksItem(this.tracksItems);\r\n          this.refreshTracksPrevious(this.tracksPrevious);\r\n          this.refreshTracksNext(this.tracksNext);\r\n        } else if (itemName === 'Artists') {\r\n          this.artistsItems = (res as any).artists.items;\r\n          this.artistsPrevious = (res as any).artists.previous;\r\n          this.artistsNext = (res as any).artists.next;\r\n\r\n          this.addNewArtistsItem(this.artistsItems);\r\n          this.refreshArtistsPrevious(this.artistsPrevious);\r\n          this.refreshArtistsNext(this.artistsNext);\r\n        } else if (itemName === 'Playlists') {\r\n          this.playlistsItems = (res as any).playlists.items;\r\n          this.playlistsPrevious = (res as any).playlists.previous;\r\n          this.playlistsNext = (res as any).playlists.next;\r\n\r\n          this.addNewPlaylistsItem(this.playlistsItems);\r\n          this.refreshPlaylistsPrevious(this.playlistsPrevious);\r\n          this.refreshPlaylistsNext(this.playlistsNext);\r\n        } else if (itemName === 'Shows') {\r\n          this.showsItems = (res as any).shows.items;\r\n          this.showsPrevious = (res as any).shows.previous;\r\n          this.showsNext = (res as any).shows.next;\r\n\r\n          this.addNewShowsItem(this.showsItems);\r\n          this.refreshShowsPrevious(this.showsPrevious);\r\n          this.refreshShowsNext(this.showsNext);\r\n        } else if (itemName === 'Episodes') {\r\n          this.episodesItems = (res as any).episodes.items;\r\n          this.episodesPrevious = (res as any).episodes.previous;\r\n          this.episodesNext = (res as any).episodes.next;\r\n\r\n          this.addNewEpisodesItem(this.episodesItems);\r\n          this.refreshEpisodesPrevious(this.episodesPrevious);\r\n          this.refreshEpisodesNext(this.episodesNext);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  addNewAlbumsItem(value: SpotifyApi.IAlbums[]) {\r\n    this.newAlbumsItemEvent.emit(value);\r\n  }\r\n  refreshAlbumsPrevious(value: string | null) {\r\n    this.newAlbumsPreviousEvent.emit(value);\r\n  }\r\n  refreshAlbumsNext(value: string | null) {\r\n    this.newAlbumsNextEvent.emit(value);\r\n  }\r\n\r\n  addNewTracksItem(value: SpotifyApi.ITracks[]) {\r\n    this.newTracksItemEvent.emit(value);\r\n  }\r\n  refreshTracksPrevious(value: string | null) {\r\n    this.newTracksPreviousEvent.emit(value);\r\n  }\r\n  refreshTracksNext(value: string | null) {\r\n    this.newTracksNextEvent.emit(value);\r\n  }\r\n\r\n  addNewArtistsItem(value: SpotifyApi.IArtists[]) {\r\n    this.newArtistsItemEvent.emit(value);\r\n  }\r\n  refreshArtistsPrevious(value: string | null) {\r\n    this.newArtistsPreviousEvent.emit(value);\r\n  }\r\n  refreshArtistsNext(value: string | null) {\r\n    this.newArtistsNextEvent.emit(value);\r\n  }\r\n\r\n  addNewPlaylistsItem(value: SpotifyApi.IPlaylists[]) {\r\n    this.newPlaylistsItemEvent.emit(value);\r\n  }\r\n  refreshPlaylistsPrevious(value: string | null) {\r\n    this.newPlaylistsPreviousEvent.emit(value);\r\n  }\r\n  refreshPlaylistsNext(value: string | null) {\r\n    this.newPlaylistsNextEvent.emit(value);\r\n  }\r\n\r\n  addNewShowsItem(value: SpotifyApi.IShows[]) {\r\n    this.newShowsItemEvent.emit(value);\r\n  }\r\n  refreshShowsPrevious(value: string | null) {\r\n    this.newShowsPreviousEvent.emit(value);\r\n  }\r\n  refreshShowsNext(value: string | null) {\r\n    this.newShowsNextEvent.emit(value);\r\n  }\r\n\r\n  addNewEpisodesItem(value: SpotifyApi.IEpisodes[]) {\r\n    this.newEpisodesItemEvent.emit(value);\r\n  }\r\n  refreshEpisodesPrevious(value: string | null) {\r\n    this.newEpisodesPreviousEvent.emit(value);\r\n  }\r\n  refreshEpisodesNext(value: string | null) {\r\n    this.newEpisodesNextEvent.emit(value);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"steps-buttons\">\r\n    <span\r\n      ><button\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        [disabled]=\"!Previous\"\r\n        (click)=\"getPreviousList(Previous, ItemName)\"\r\n      >\r\n        Previous\r\n      </button></span\r\n    ><span>{{ ItemName }} :</span>\r\n    <span\r\n      ><button\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        [disabled]=\"!Next\"\r\n        (click)=\"getNextList(Next, ItemName)\"\r\n      >\r\n        Next\r\n      </button></span\r\n    >\r\n  </div>\r\n</div>\r\n","<div class=\"card-container\">\r\n  <mat-card class=\"example-card\" *ngFor=\"let item of playlistsItems\">\r\n    <mat-card-header class=\"search-header\">\r\n      <mat-card-subtitle class=\"search-titles\">{{\r\n        item.name\r\n      }}</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <img\r\n      mat-card-image\r\n      src=\"{{ item.images[0] && item.images[0].url }}\"\r\n      class=\"search-images\"\r\n      alt=\"Photo of a Shiba Inu\"\r\n    />\r\n    <mat-card-content class=\"card-content\">\r\n      <p>Description : {{ item.description }}</p>\r\n      <p>Créateur : {{ item.owner.display_name }}</p>\r\n    </mat-card-content>\r\n    <mat-card-actions class=\"search-card-actions\">\r\n      <button mat-button class=\"search-buttons-actions\">Lien</button>\r\n      <!-- <button\r\n        mat-button\r\n        class=\"search-buttons-actions\"\r\n        (click)=\"addNewItemId(item.id)\"\r\n      >\r\n        Ajouter\r\n      </button> -->\r\n\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search-playlists',\r\n  templateUrl: './search-playlists.component.html',\r\n  styleUrls: ['./search-playlists.component.scss']\r\n})\r\nexport class SearchPlaylistsComponent implements OnInit {\r\n  @Input() playlistsItems: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Output, EventEmitter } from '@angular/core';\r\n  \r\n@Component({\r\n  selector: 'app-search-episodes',\r\n  templateUrl: './search-episodes.component.html',\r\n  styleUrls: ['./search-episodes.component.scss']\r\n})\r\nexport class SearchEpisodesComponent implements OnInit {\r\n  @Input() episodesItems: any;\r\n\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  @Output() newItemEvent = new EventEmitter<string>();\r\n\r\n  @Output() newItemUriEvent = new EventEmitter<string>();\r\n\r\n  addNewItemId(id: string) {\r\n    this.newItemEvent.emit(id);\r\n  }\r\n\r\n  addItemUri(uri: string) {\r\n    this.newItemUriEvent.emit(uri);\r\n  }\r\n}\r\n","<div class=\"card-container\">\r\n  <mat-card class=\"example-card\" *ngFor=\"let item of episodesItems\">\r\n    <mat-card-header class=\"search-header\">\r\n      <mat-card-subtitle class=\"search-titles\">{{\r\n        item.name\r\n      }}</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <img\r\n      mat-card-image\r\n      src=\"{{ item.images[0].url }}\"\r\n      class=\"search-images\"\r\n      alt=\"Photo of a Shiba Inu\"\r\n    />\r\n    <mat-card-content class=\"card-content\">\r\n      <p class=\"description\">Description : {{ item.description }}</p>\r\n      <!-- <p>Durée : {{ millisToMinutesAndSeconds(item.duration_ms) }} min</p> -->\r\n    </mat-card-content>\r\n    <mat-card-actions class=\"search-card-actions\">\r\n      <button mat-button class=\"search-buttons-actions\">Lien</button>\r\n   <app-add-items-to-playlists\r\n        [selectedId]=\"item.id\"\r\n        [selectedUri]=\"item.uri\"\r\n      ></app-add-items-to-playlists>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","export const environment = {\r\n  uri: 'http://localhost:4200/',\r\n  clientId: '9007fa782c1d4b429fb7902f98becbd4',\r\n  clientSecret: 'df942142510b44fda6528d6bc5c012a8',\r\n  authorizeUri: 'https://accounts.spotify.com/authorize',\r\n  SCOPES: [\r\n    'ugc-image-upload',\r\n    'user-read-recently-played',\r\n    'user-top-read',\r\n    'user-read-playback-position',\r\n    'user-read-playback-state',\r\n    'user-modify-playback-state',\r\n    'user-read-currently-playing',\r\n    'app-remote-control',\r\n    'streaming',\r\n    'playlist-modify-public',\r\n    'playlist-modify-private',\r\n    'playlist-read-private',\r\n    'playlist-read-collaborative',\r\n    'user-follow-modify',\r\n    'user-follow-read',\r\n    'user-library-modify',\r\n    'user-library-read',\r\n    'user-read-email',\r\n    'user-read-private'\r\n  ],\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Input } from '@angular/core';\r\nimport { Output, EventEmitter } from '@angular/core';\r\nimport { SpotifyApi } from '../models/@types';\r\n/**\r\n * @title Basic cards\r\n */\r\n@Component({\r\n  selector: 'card',\r\n  templateUrl: './cards.component.html',\r\n  styleUrls: ['./cards.component.scss']\r\n})\r\nexport class CardsComponent {\r\n  @Input()\r\n  featPlaylists?: SpotifyApi.IfeaturedPlaylists;\r\n\r\n  @Input()\r\n  allCategories?: SpotifyApi.IAllCategories;\r\n  @Input()\r\n  AllNewReleases?: SpotifyApi.IAllNewReleases;\r\n\r\n  @Input()\r\n  favouritesArtists?: SpotifyApi.IFavouritesArtists;\r\n\r\n  previous: string | null = '';\r\n  next: string | null = '';\r\n\r\n  @Output() previousFeaturedListEvent = new EventEmitter<string | null>();\r\n  @Output() nextFeaturedListEvent = new EventEmitter<string | null>();\r\n\r\n  @Output() previousallCategoriesEvent = new EventEmitter<string | null>();\r\n  @Output() nextallCategoriesEvent = new EventEmitter<string | null>();\r\n\r\n  @Output() previousAllNewReleasesEvent = new EventEmitter<string | null>();\r\n  @Output() nextAllNewReleasesEvent = new EventEmitter<string | null>();\r\n\r\n  previousFeaturedList(previous: string | null) {\r\n    this.previousFeaturedListEvent.emit(previous);\r\n  }\r\n  nextFeaturedList(next: string | null) {\r\n    if (next !== null && next !== undefined && next !== '') {\r\n      this.nextFeaturedListEvent.emit(next);\r\n    }\r\n  }\r\n\r\n  previousAllCategories(previous: string | null) {\r\n    this.previousallCategoriesEvent.emit(previous);\r\n  }\r\n  nextAllCategories(next: string | null) {\r\n    if (next !== null && next !== undefined && next !== '') {\r\n      this.nextallCategoriesEvent.emit(next);\r\n    }\r\n  }\r\n\r\n  previousAllNewReleases(previous: string | null) {\r\n    this.previousAllNewReleasesEvent.emit(previous);\r\n  }\r\n\r\n  nextAllNewReleases(next: string | null) {\r\n    if (next !== null && next !== undefined && next !== '') {\r\n      this.nextAllNewReleasesEvent.emit(next);\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <div *ngIf=\"featPlaylists\" class=\"cards\">\r\n    <mat-card class=\"mat-elevation-z5\">\r\n      <mat-card-title>{{ featPlaylists.message }}</mat-card-title>\r\n      <img\r\n        mat-card-image\r\n        src=\"{{ featPlaylists.image }}\"\r\n        alt=\"Photo\"\r\n        height=\"240px\"\r\n      />\r\n      <div class=\"text-and-buttons-container\">\r\n        <mat-card-content>\r\n          <p>Description: {{ featPlaylists.description }}</p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button\r\n            mat-raised-button\r\n            [disabled]=\"!featPlaylists.previous\"\r\n            (click)=\"previousFeaturedList(featPlaylists.previous)\"\r\n          >\r\n            Précédent\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            [disabled]=\"!featPlaylists.next\"\r\n            (click)=\"nextFeaturedList(featPlaylists.next)\"\r\n          >\r\n            Suivant\r\n          </button>\r\n        </mat-card-actions>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div *ngIf=\"allCategories\" class=\"cards\">\r\n    <mat-card class=\"mat-elevation-z5\">\r\n      <mat-card-title>{{ allCategories.name }}</mat-card-title>\r\n      <img mat-card-image src=\"{{ allCategories.icon }}\" alt=\"Photo\" />\r\n      <div class=\"text-and-buttons-container\">\r\n        <mat-card-content>\r\n          <p>Genres: {{ allCategories.id }}</p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button\r\n            mat-raised-button\r\n            [disabled]=\"!allCategories.previous\"\r\n            (click)=\"previousAllCategories(allCategories.previous)\"\r\n          >\r\n            Précédent\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            [disabled]=\"!allCategories.next\"\r\n            (click)=\"nextAllCategories(allCategories.next)\"\r\n          >\r\n            Suivant\r\n          </button>\r\n        </mat-card-actions>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n  <div *ngIf=\"AllNewReleases\" class=\"cards\">\r\n    <mat-card class=\"mat-elevation-z5\">\r\n      <mat-card-title>{{ AllNewReleases.name }}</mat-card-title>\r\n      <img mat-card-image src=\"{{ AllNewReleases.image }}\" alt=\"Photo\" />\r\n      <div class=\"text-and-buttons-container\">\r\n        <mat-card-content>\r\n          <p>Artists: {{ AllNewReleases.artist_name }}</p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button\r\n            mat-raised-button\r\n            [disabled]=\"!AllNewReleases.previous\"\r\n            (click)=\"previousAllNewReleases(AllNewReleases.previous)\"\r\n          >\r\n            Précédent\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            [disabled]=\"!AllNewReleases.next\"\r\n            (click)=\"nextAllNewReleases(AllNewReleases.next)\"\r\n          >\r\n            Suivant\r\n          </button>\r\n        </mat-card-actions>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n  <div *ngIf=\"favouritesArtists\" class=\"cards\">\r\n    <mat-card class=\"mat-elevation-z5\">\r\n      <mat-card-title>{{ favouritesArtists.name }}</mat-card-title>\r\n      <img\r\n        mat-card-image\r\n        src=\"{{ favouritesArtists.image }}\"\r\n        alt=\"Photo\"\r\n        height=\"240px\"\r\n      />\r\n      <div class=\"text-and-buttons-container\">\r\n        <mat-card-content>\r\n          <p>Genre(s): {{ favouritesArtists.genres }}</p>\r\n        </mat-card-content>\r\n        <mat-card-actions> </mat-card-actions>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { fromEvent, of } from 'rxjs';\r\nimport {\r\n  catchError,\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  filter,\r\n  map\r\n} from 'rxjs/operators';\r\nimport { SpotifyApi } from 'src/app/models/@types';\r\nimport { SpotifyServices } from 'src/app/services/spotify-services';\r\n\r\n\r\n@Component({\r\n  selector: 'app-playlists-images',\r\n  templateUrl: './playlists-images.component.html',\r\n  styleUrls: ['./playlists-images.component.scss']\r\n})\r\nexport class PlaylistsImagesComponent implements OnInit {\r\n  dataLoaded: boolean = false;\r\n  @Input() playlistId: string | undefined;\r\n\r\n  constructor(private spotifyServices: SpotifyServices) {}\r\n\r\n  @ViewChild('playlistImageSearchInput', { static: true })\r\n  playlistImageSearchInput!: ElementRef;\r\n  albumsData?: SpotifyApi.IAlbums[] = [];\r\n\r\n  ngOnInit() {\r\n    fromEvent(this.playlistImageSearchInput.nativeElement, 'keyup')\r\n      .pipe(\r\n        map((event: any) => {\r\n          return event.target.value;\r\n        }),\r\n        catchError((error) => of(`Bad Promise: ${error}`)),\r\n        filter((res) => res.length > 2),\r\n        debounceTime(1000),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe((text: string) => {\r\n        this.spotifyServices.searchForAnItem(text).subscribe(\r\n          (res: any) => {\r\n            this.dataLoaded = true;\r\n            this.albumsData = res.albums.items;\r\n            console.log(this.albumsData);\r\n          },\r\n          (err) => {\r\n            console.error('error', err);\r\n          }\r\n        );\r\n      });\r\n  }\r\n\r\n  getPlaylistCoverImage(playlistId: string, url: string) {\r\n    console.log(this.albumsData);\r\n    this.spotifyServices\r\n      .getPlaylistCoverImage(playlistId, url)\r\n      .subscribe((res) => {\r\n        console.log(res);\r\n      });\r\n  }\r\n}\r\n","<div class=\"search-images-container\">\r\n  <mat-form-field class=\"example-form-field\" appearance=\"fill\">\r\n    <mat-label>Ajouter une image ?</mat-label>\r\n    <input\r\n      matInput\r\n      type=\"text\"\r\n      #playlistImageSearchInput\r\n      class=\"form-control\"\r\n    />\r\n    <button matSuffix mat-icon-button aria-label=\"Clear\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </mat-form-field>\r\n  <div\r\n    *ngIf=\"dataLoaded && playlistId\"\r\n    style=\"width: 100%; height: 300 px; display: flex; flex-wrap: wrap\"\r\n  >\r\n    <div *ngFor=\"let item of albumsData\" style=\"display: flex; flex-wrap: wrap\">\r\n      <img\r\n        src=\"{{ item.images[1].url }}\"\r\n        class=\"image\"\r\n        (click)=\"getPlaylistCoverImage(playlistId, item.images[1].url)\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, ElementRef, ViewChild } from '@angular/core';\r\nimport {\r\n  debounceTime,\r\n  map,\r\n  distinctUntilChanged,\r\n  filter,\r\n  catchError\r\n} from 'rxjs/operators';\r\nimport { fromEvent, of } from 'rxjs';\r\nimport { SpotifyServices } from '../../services/spotify-services';\r\nimport { FormControl } from '@angular/forms';\r\nimport { SpotifyApi } from 'src/app/models/@types';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent {\r\n  constructor(private spotifyServices: SpotifyServices) {}\r\n\r\n  items: string | undefined;\r\n  uri: string | undefined;\r\n  noAddClick: boolean = true;\r\n  fontStyleControl = new FormControl();\r\n\r\n  tracksItem: string[] = [];\r\n  playlistData: any | undefined;\r\n\r\n  albumsData?: SpotifyApi.IAlbums;\r\n  albumsItems?: SpotifyApi.IAlbums[];\r\n  albumsPrevious: string = '';\r\n  albumsNext: string = '';\r\n\r\n  tracksData?: SpotifyApi.ITracks;\r\n  tracksItems?: SpotifyApi.ITracks[];\r\n  tracksPrevious: string = '';\r\n  tracksNext: string = '';\r\n\r\n  artistsData?: SpotifyApi.IArtists;\r\n  artistsItems?: SpotifyApi.IArtists[];\r\n  artistsPrevious: string = '';\r\n  artistsNext: string = '';\r\n\r\n  playlistsData?: SpotifyApi.IPlaylists;\r\n  playlistsItems?: SpotifyApi.IPlaylists[];\r\n  playlistsPrevious: string = '';\r\n  playlistsNext: string = '';\r\n\r\n  showsData?: SpotifyApi.IShows;\r\n  showsItems?: SpotifyApi.IShows[];\r\n  showsPrevious: string = '';\r\n  showsNext: string = '';\r\n\r\n  episodesData?: SpotifyApi.IEpisodes;\r\n  episodesItems?: SpotifyApi.IEpisodes[];\r\n  episodesPrevious: string = '';\r\n  episodesNext: string = '';\r\n\r\n  displayingContent: boolean = false;\r\n  @ViewChild('movieSearchInput', { static: true })\r\n  movieSearchInput!: ElementRef;\r\n\r\n  isLoading: boolean = false;\r\n\r\n  millisToMinutesAndSeconds(value: number): number {\r\n    let minutes = Math.floor(value / 60000);\r\n    return minutes;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.spotifyServices\r\n      .getUserPlaylists()\r\n      .subscribe(\r\n        (userPlaylist) => (this.playlistData = (userPlaylist as any).items)\r\n      );\r\n  }\r\n\r\n  ngOnInit() {\r\n    fromEvent(this.movieSearchInput.nativeElement, 'keyup')\r\n      .pipe(\r\n        map((event: any) => {\r\n          return event.target.value;\r\n        }),\r\n        catchError((error) => of(`Bad Promise: ${error}`)),\r\n        filter((res) => res.length > 2),\r\n        debounceTime(1000),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe((text: string) => {\r\n        this.isLoading = true;\r\n        this.spotifyServices.searchForAnItem(text).subscribe(\r\n          (res) => {\r\n            this.albumsData = (res as any).albums;\r\n\r\n            this.albumsItems = (res as any).albums.items;\r\n            this.albumsPrevious = '';\r\n            this.albumsNext = '';\r\n\r\n            this.tracksData = (res as any).tracks;\r\n            this.tracksItems = (res as any).tracks.items;\r\n            this.tracksPrevious = '';\r\n            this.tracksNext = '';\r\n\r\n            this.artistsData = (res as any).artists;\r\n            this.artistsItems = (res as any).artists.items;\r\n            this.artistsPrevious = '';\r\n            this.artistsNext = '';\r\n\r\n            this.playlistsData = (res as any).playlists;\r\n\r\n            this.playlistsItems = (res as any).playlists.items;\r\n            this.playlistsPrevious = '';\r\n            this.playlistsNext = '';\r\n\r\n            this.showsData = (res as any).shows;\r\n            this.showsItems = (res as any).shows.items;\r\n            this.showsPrevious = '';\r\n            this.showsNext = '';\r\n\r\n            this.episodesData = (res as any).episodes;\r\n            this.episodesItems = (res as any).episodes.items;\r\n            this.episodesPrevious = '';\r\n            this.episodesNext = '';\r\n\r\n            this.isLoading = false;\r\n            this.displayingContent = true;\r\n          },\r\n          (err) => {\r\n            console.error('error', err);\r\n          }\r\n        );\r\n      });\r\n  }\r\n\r\n  addAlbumsItem(newItem: SpotifyApi.IAlbums[]) {\r\n    this.albumsItems = newItem;\r\n  }\r\n  refreshAlbumsNextButton(value: string) {\r\n    this.albumsNext = value;\r\n  }\r\n  refreshAlbumsPrevButton(value: string) {\r\n    this.albumsPrevious = value;\r\n  }\r\n\r\n  addTracksItem(newItem: SpotifyApi.ITracks[]) {\r\n    this.tracksItems = newItem;\r\n  }\r\n  refreshTracksNextButton(value: string) {\r\n    this.tracksNext = value;\r\n  }\r\n  refreshTracksPrevButton(value: string) {\r\n    this.tracksPrevious = value;\r\n  }\r\n\r\n  addArtistsItem(newItem: SpotifyApi.IArtists[]) {\r\n    this.artistsItems = newItem;\r\n  }\r\n  refreshArtistsNextButton(value: string) {\r\n    this.artistsNext = value;\r\n  }\r\n  refreshArtistsPrevButton(value: string) {\r\n    this.artistsPrevious = value;\r\n  }\r\n\r\n  addPlaylistsItem(newItem: SpotifyApi.IPlaylists[]) {\r\n    this.playlistsItems = newItem;\r\n  }\r\n  refreshPlaylistsNextButton(value: string) {\r\n    this.playlistsNext = value;\r\n  }\r\n  refreshPlaylistsPrevButton(value: string) {\r\n    this.playlistsPrevious = value;\r\n  }\r\n\r\n  addShowsItem(newItem: SpotifyApi.IShows[]) {\r\n    this.showsItems = newItem;\r\n  }\r\n  refreshShowsNextButton(value: string) {\r\n    this.showsNext = value;\r\n  }\r\n  refreshShowsPrevButton(value: string) {\r\n    this.showsPrevious = value;\r\n  }\r\n\r\n  addEpisodesItem(newItem: SpotifyApi.IEpisodes[]) {\r\n    this.episodesItems = newItem;\r\n  }\r\n  refreshEpisodesNextButton(value: string) {\r\n    this.episodesNext = value;\r\n  }\r\n  refreshEpisodesPrevButton(value: string) {\r\n    this.episodesPrevious = value;\r\n  }\r\n\r\n  addItemId(id: string) {\r\n    this.items = id;\r\n    this.noAddClick = !this.noAddClick;\r\n  }\r\n  addItemUri(uri: string) {\r\n    this.uri = uri;\r\n  }\r\n}\r\n","<body>\r\n  <div class=\"wrapper\">\r\n    <app-sidebar></app-sidebar>\r\n    <div class=\"search_container\">\r\n      <mat-form-field class=\"example-form-field\" appearance=\"fill\">\r\n        <mat-label>Que recherchez vous ?</mat-label>\r\n        <input matInput type=\"text\" #movieSearchInput class=\"form-control\" />\r\n        <button matSuffix mat-icon-button aria-label=\"Clear\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"displayingContent\">\r\n      <div class=\"categories_buttons\">\r\n        <div class=\"buttons_container\">\r\n          <mat-button-toggle-group\r\n            [formControl]=\"fontStyleControl\"\r\n            aria-label=\"Font Style\"\r\n            class=\"button-toggle-group\"\r\n          >\r\n            <mat-button-toggle value=\"tracks\" color=\"primary\"\r\n              >tracks</mat-button-toggle\r\n            >\r\n            <mat-button-toggle value=\"albums\" color=\"primary\"\r\n              >albums</mat-button-toggle\r\n            >\r\n            <mat-button-toggle value=\"playlists\" color=\"primary\"\r\n              >playlists</mat-button-toggle\r\n            >\r\n            <mat-button-toggle value=\"artists\" color=\"primary\"\r\n              >artists</mat-button-toggle\r\n            >\r\n            <mat-button-toggle value=\"episodes\" color=\"primary\"\r\n              >episodes</mat-button-toggle\r\n            >\r\n            <mat-button-toggle value=\"shows\" color=\"primary\"\r\n              >shows</mat-button-toggle\r\n            >\r\n          </mat-button-toggle-group>\r\n        </div>\r\n      </div>\r\n      <div class=\"search_results_items\">\r\n        <app-search-steps-buttons\r\n          [albumsData]=\"albumsData\"\r\n          [Previous]=\"albumsPrevious\"\r\n          [Next]=\"albumsNext\"\r\n          [ItemName]=\"'Albums'\"\r\n          (newAlbumsItemEvent)=\"addAlbumsItem($event)\"\r\n          (newAlbumsNextEvent)=\"refreshAlbumsNextButton($event)\"\r\n          (newAlbumsPreviousEvent)=\"refreshAlbumsPrevButton($event)\"\r\n          class=\"results_items_container\"\r\n        ></app-search-steps-buttons>\r\n        <div class=\"results_items_cards\">\r\n          <app-search-albums [albumsItems]=\"albumsItems\"></app-search-albums>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"search_results_items\">\r\n        <app-search-steps-buttons\r\n          [tracksData]=\"tracksData\"\r\n          [Previous]=\"tracksPrevious\"\r\n          [Next]=\"tracksNext\"\r\n          [ItemName]=\"'Tracks'\"\r\n          (newTracksItemEvent)=\"addTracksItem($event)\"\r\n          (newTracksNextEvent)=\"refreshTracksNextButton($event)\"\r\n          (newTracksPreviousEvent)=\"refreshTracksPrevButton($event)\"\r\n          class=\"results_items_container\"\r\n        ></app-search-steps-buttons>\r\n        <div class=\"results_items_cards\">\r\n          <app-search-tracks\r\n            [tracksItems]=\"tracksItems\"\r\n            (newItemEvent)=\"addItemId($event)\"\r\n            (newItemUriEvent)=\"addItemUri($event)\"\r\n          ></app-search-tracks>\r\n        </div>\r\n      </div>\r\n      <div class=\"search_results_items\">\r\n        <app-search-steps-buttons\r\n          [artistsData]=\"artistsData\"\r\n          [Previous]=\"artistsPrevious\"\r\n          [Next]=\"artistsNext\"\r\n          [ItemName]=\"'Artists'\"\r\n          (newArtistsItemEvent)=\"addArtistsItem($event)\"\r\n          (newArtistsNextEvent)=\"refreshArtistsNextButton($event)\"\r\n          (newArtistsPreviousEvent)=\"refreshArtistsPrevButton($event)\"\r\n          class=\"results_items_container\"\r\n        ></app-search-steps-buttons>\r\n        <div class=\"results_items_cards\">\r\n          <app-search-artists\r\n            [artistsItems]=\"artistsItems\"\r\n          ></app-search-artists>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"search_results_items\">\r\n        <app-search-steps-buttons\r\n          [playlistsData]=\"playlistsData\"\r\n          [Previous]=\"playlistsPrevious\"\r\n          [Next]=\"playlistsNext\"\r\n          [ItemName]=\"'Playlists'\"\r\n          (newPlaylistsItemEvent)=\"addPlaylistsItem($event)\"\r\n          (newPlaylistsNextEvent)=\"refreshPlaylistsNextButton($event)\"\r\n          (newPlaylistsPreviousEvent)=\"refreshPlaylistsPrevButton($event)\"\r\n          class=\"results_items_container\"\r\n        ></app-search-steps-buttons>\r\n        <div class=\"results_items_cards\">\r\n          <app-search-playlists\r\n            [playlistsItems]=\"playlistsItems\"\r\n          ></app-search-playlists>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"search_results_items\">\r\n        <app-search-steps-buttons\r\n          [showsData]=\"showsData\"\r\n          [Previous]=\"showsPrevious\"\r\n          [Next]=\"showsNext\"\r\n          [ItemName]=\"'Shows'\"\r\n          (newShowsItemEvent)=\"addShowsItem($event)\"\r\n          (newShowsNextEvent)=\"refreshShowsNextButton($event)\"\r\n          (newShowsPreviousEvent)=\"refreshShowsPrevButton($event)\"\r\n          class=\"results_items_container\"\r\n        ></app-search-steps-buttons>\r\n        <div class=\"results_items_cards\">\r\n          <app-search-shows [showsItems]=\"showsItems\"></app-search-shows>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"search_results_items\">\r\n        <app-search-steps-buttons\r\n          [episodesData]=\"episodesData\"\r\n          [Previous]=\"episodesPrevious\"\r\n          [Next]=\"episodesNext\"\r\n          [ItemName]=\"'Episodes'\"\r\n          (newEpisodesItemEvent)=\"addEpisodesItem($event)\"\r\n          (newEpisodesNextEvent)=\"refreshEpisodesNextButton($event)\"\r\n          (newEpisodesPreviousEvent)=\"refreshEpisodesPrevButton($event)\"\r\n          class=\"results_items_container\"\r\n        ></app-search-steps-buttons>\r\n        <div class=\"results_items_cards\">\r\n          <app-search-episodes\r\n            [episodesItems]=\"episodesItems\"\r\n            (newItemEvent)=\"addItemId($event)\"\r\n            (newItemUriEvent)=\"addItemUri($event)\"\r\n          ></app-search-episodes>\r\n        </div>\r\n      </div>\r\n\r\n      <ng-template [ngIf]=\"isLoading\" class=\"loading-wrapper\">\r\n        <mat-spinner></mat-spinner>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</body>\r\n","import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\nimport { SpotifyServices } from './spotify-services';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n  constructor(private spotifyServices: SpotifyServices) {}\r\n  public requestDataFromMultipleSources(): Observable<any[]> {\r\n    let login = this.spotifyServices.login();\r\n    let getTokens = this.spotifyServices.getToken();\r\n    return forkJoin([login, getTokens]);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { SpotifyServices } from '../services/spotify-services';\r\nimport { FormControl } from '@angular/forms';\r\nimport { BrowseApiService } from '../services/browse-api-services';\r\nimport { SpotifyApi } from '../models/@types';\r\n\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.scss']\r\n})\r\nexport class HomepageComponent {\r\n  constructor(\r\n    private spotifyServices: SpotifyServices,\r\n    private browseApiService: BrowseApiService\r\n  ) {}\r\n\r\n  featuredPlaylists: SpotifyApi.IfeaturedPlaylists =\r\n    {} as SpotifyApi.IfeaturedPlaylists;\r\n  AllNewReleases: SpotifyApi.IAllNewReleases = {} as SpotifyApi.IAllNewReleases;\r\n  allCategories: SpotifyApi.IAllCategories = {} as SpotifyApi.IAllCategories;\r\n  favouritesArtists: SpotifyApi.IFavouritesArtists =\r\n    {} as SpotifyApi.IFavouritesArtists;\r\n\r\n  searchControl = new FormControl();\r\n  initialFeaturedValue: string = `https://api.spotify.com/v1/browse/featured-playlists?country=FR&limit=2`;\r\n  initialCategoriesValue: string = `https://api.spotify.com/v1/browse/categories?country=FR&limit=2`;\r\n  initialNewReleaseValues: string = `https://api.spotify.com/v1/browse/new-releases?country=FR&limit=2`;\r\n\r\n  ngOnInit() {\r\n    this.spotifyServices.getToken();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.browseApiService.getAllCategories();\r\n    this.browseApiService.getCategoryPlaylists('party');\r\n    this.browseApiService.getAllFeaturedPlaylists();\r\n    this.spotifyServices.getUserFavouriteArtists();\r\n\r\n    this.spotifyServices\r\n      .getFeaturedPlaylists(this.initialFeaturedValue)\r\n      .subscribe((res: any) => {\r\n        console.log(res);\r\n        this.featuredPlaylists.image = res.playlists.items[0].images[0].url;\r\n        this.featuredPlaylists.message = res.message;\r\n        this.featuredPlaylists.description = res.playlists.items[0].description;\r\n        this.featuredPlaylists.previous =\r\n          res.playlists.previous === null ? '' : res.playlists.previous;\r\n        this.featuredPlaylists.next =\r\n          res.playlists.next === null ? '' : res.playlists.next;\r\n      });\r\n    this.spotifyServices\r\n      .getAllCategories(this.initialCategoriesValue)\r\n      .subscribe((res: any) => {\r\n        console.log(res);\r\n        this.allCategories.name = res.categories.items[0].name;\r\n        this.allCategories.icon = res.categories.items[0].icons[0].url;\r\n        this.allCategories.id = res.categories.items[0].id;\r\n        this.allCategories.previous =\r\n          res.categories.previous === null ? '' : res.categories.previous;\r\n        this.allCategories.next =\r\n          res.categories.next === null ? '' : res.categories.next;\r\n      });\r\n    this.spotifyServices\r\n      .getAllNewReleases(this.initialNewReleaseValues)\r\n      .subscribe((res: any) => {\r\n        console.log(res);\r\n        this.AllNewReleases.name = res.albums.items[0].name;\r\n        this.AllNewReleases.artist_name = res.albums.items[0].artists[0].name;\r\n        this.AllNewReleases.image = res.albums.items[0].images[0].url;\r\n        this.AllNewReleases.previous = res.albums.previous;\r\n        this.AllNewReleases.next = res.albums.next;\r\n      });\r\n\r\n    this.spotifyServices.getUserFavouriteArtists().subscribe((res: any) => {\r\n      this.favouritesArtists.name = res.artists.items[0].name;\r\n      this.favouritesArtists.genres = res.artists.items[0].genres;\r\n      this.favouritesArtists.image = res.artists.items[0].images[0].url;\r\n      this.favouritesArtists.previous = res.artists.previous;\r\n      this.favouritesArtists.next = res.artists.next;\r\n    });\r\n  }\r\n  getPreviousFeaturedList(value: string | null) {\r\n    if (value !== null) {\r\n      this.spotifyServices.getFeaturedPlaylists(value).subscribe((res: any) => {\r\n        this.updatePlaylists(res);\r\n      });\r\n    }\r\n  }\r\n  getNextFeaturedList(value: string | null) {\r\n    if (value !== null) {\r\n      this.spotifyServices.getFeaturedPlaylists(value).subscribe((res: any) => {\r\n        this.updatePlaylists(res);\r\n      });\r\n    }\r\n  }\r\n  getPreviousAllCategories(value: string | null) {\r\n    if (value !== null) {\r\n      this.spotifyServices.getAllCategories(value).subscribe((res: any) => {\r\n        this.updateCategories(res);\r\n      });\r\n    }\r\n  }\r\n  getNextAllCategories(value: string | null) {\r\n    if (value !== null) {\r\n      this.spotifyServices.getAllCategories(value).subscribe((res: any) => {\r\n        this.updateCategories(res);\r\n      });\r\n    }\r\n  }\r\n  getNextAllNewReleases(value: string | null) {\r\n    if (value !== null) {\r\n      this.spotifyServices.getAllNewReleases(value).subscribe((res: any) => {\r\n        this.updateNewReleasesData(res);\r\n      });\r\n    }\r\n  }\r\n  getPreviousAllNewReleases(value: string | null) {\r\n    if (value !== null) {\r\n      this.spotifyServices.getAllNewReleases(value).subscribe((res: any) => {\r\n        this.updateNewReleasesData(res);\r\n      });\r\n    }\r\n  }\r\n\r\n  updatePlaylists(res: any) {\r\n    this.featuredPlaylists.image = res.playlists.items[0].images[0].url;\r\n    this.featuredPlaylists.message = res.message;\r\n    this.featuredPlaylists.description = res.playlists.items[0].description;\r\n    this.featuredPlaylists.previous =\r\n      res.playlists.previous === null ? '' : res.playlists.previous;\r\n    this.featuredPlaylists.next =\r\n      res.playlists.next === null ? '' : res.playlists.next;\r\n  }\r\n\r\n  updateCategories(res: any) {\r\n    this.allCategories.name = res.categories.items[0].name;\r\n    this.allCategories.icon = res.categories.items[0].icons[0].url;\r\n    this.allCategories.id = res.categories.items[0].id;\r\n    this.allCategories.previous =\r\n      res.categories.previous === null ? '' : res.categories.previous;\r\n    this.allCategories.next =\r\n      res.categories.next === null ? '' : res.categories.next;\r\n  }\r\n\r\n  updateNewReleasesData(res: any) {\r\n    this.AllNewReleases.name = res.albums.items[0].name;\r\n    this.AllNewReleases.artist_name = res.albums.items[0].artists[0].name;\r\n    this.AllNewReleases.image = res.albums.items[0].images[0].url;\r\n    this.AllNewReleases.previous = res.albums.previous;\r\n    this.AllNewReleases.next = res.albums.next;\r\n  }\r\n}\r\n","<body class=\"homepage-container\">\r\n  <app-sidebar></app-sidebar>\r\n\r\n  <div class=\"cards-wrapper\">\r\n    <div class=\"cards\">\r\n      <h2>featured Playlists</h2>\r\n      <card\r\n        [featPlaylists]=\"featuredPlaylists\"\r\n        (previousFeaturedListEvent)=\"getPreviousFeaturedList($event)\"\r\n        (nextFeaturedListEvent)=\"getNextFeaturedList($event)\"\r\n      ></card>\r\n    </div>\r\n\r\n    <div class=\"cards\">\r\n      <h2>All categories</h2>\r\n      <card\r\n        [allCategories]=\"allCategories\"\r\n        (previousallCategoriesEvent)=\"getPreviousAllCategories($event)\"\r\n        (nextallCategoriesEvent)=\"getNextAllCategories($event)\"\r\n      ></card>\r\n    </div>\r\n\r\n    <div class=\"cards\">\r\n      <h2>Browse Categories</h2>\r\n      <card\r\n        [AllNewReleases]=\"AllNewReleases\"\r\n        (previousAllNewReleasesEvent)=\"getPreviousAllNewReleases($event)\"\r\n        (nextAllNewReleasesEvent)=\"getNextAllNewReleases($event)\"\r\n      ></card>\r\n    </div>\r\n\r\n    <div class=\"cards\">\r\n      <h2>Favourite Artist</h2>\r\n      <card [favouritesArtists]=\"favouritesArtists\"></card>\r\n    </div>\r\n  </div>\r\n</body>\r\n","<body style=\"height: 100%\">\r\n  <div class=\"card-container\">\r\n    <mat-card class=\"example-card\" *ngFor=\"let item of artistsItems\">\r\n      <mat-card-header class=\"search-header\">\r\n        <mat-card-subtitle class=\"search-titles\" *ngIf=\"item.name\">{{\r\n          item.name\r\n        }}</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <img\r\n        mat-card-image\r\n        src=\"{{ item.images[0] && item.images[0].url }}\"\r\n        class=\"search-images\"\r\n      />\r\n      <mat-card-content class=\"card-content\">\r\n        <p>Popularité : {{ item.popularity }}</p>\r\n        <p>Genres : {{ item.genres && item.genres }}</p>\r\n      </mat-card-content>\r\n      <mat-card-actions class=\"search-card-actions\">\r\n        <button mat-button class=\"search-buttons-actions\">Lien</button>\r\n\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</body>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search-artists',\r\n  templateUrl: './search-artists.component.html',\r\n  styleUrls: ['./search-artists.component.scss']\r\n})\r\nexport class SearchArtistsComponent implements OnInit {\r\n  @Input() artistsItems: any;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"card-container\">\r\n<mat-card class=\"example-card\" *ngFor=\"let item of albumsItems\">\r\n  <mat-card-header class=\"search-header\">\r\n    <mat-card-title class=\"search-titles\">{{\r\n      item.artists[0].name\r\n    }}</mat-card-title>\r\n    <mat-card-subtitle class=\"search-titles\">{{ item.name }}</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <img\r\n    mat-card-image\r\n    src=\"{{ item.images[0].url }}\"\r\n    class=\"search-images\"\r\n    alt=\"Photo of a Shiba Inu\"\r\n  />\r\n  <mat-card-content class=\"card-content\">\r\n    <p>Date de réalisation : {{ item.release_date }}</p>\r\n    <p>Précision : {{ item.release_date_precision }}</p>\r\n    <p>Nombre de pistes : {{ item.total_tracks }}</p>\r\n  </mat-card-content>\r\n  <mat-card-actions class=\"search-card-actions\">\r\n    <button mat-button class=\"search-buttons-actions\">Lien</button>\r\n\r\n  </mat-card-actions>\r\n</mat-card>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search-albums',\r\n  templateUrl: './search-albums.component.html',\r\n  styleUrls: ['./search-albums.component.scss']\r\n})\r\nexport class SearchAlbumsComponent implements OnInit {\r\n  @Input() albumsItems: any;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { SpotifyApi } from 'src/app/models/@types';\r\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BrowseApiService {\r\n  browseUrl = 'https://api.spotify.com/v1/browse';\r\n\r\n  access_token: null | string = localStorage.getItem('access_token');\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllFeaturedPlaylists() {\r\n    let headers = new HttpHeaders()\r\n      .set('Content-Type', 'application/x-www-form-urlencoded')\r\n      .set('Authorization', 'Basic ' + this.access_token);\r\n\r\n    return this.http\r\n      .get<SpotifyApi.ListOfFeaturedPlaylistsResponse>(\r\n        `${this.browseUrl}/featured-playlists`,\r\n        { headers }\r\n      )\r\n      .pipe(\r\n        map((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getAllCategories(\r\n    params: SpotifyApi.SpotifyApiParams = {\r\n      limit: 50\r\n    }\r\n  ) {\r\n    return this.http\r\n      .get<SpotifyApi.MultipleCategoriesResponse>(\r\n        `${this.browseUrl}/categories`,\r\n        {\r\n          params\r\n        }\r\n      )\r\n      .pipe(\r\n        map((res) => {\r\n          return res.categories;\r\n        })\r\n      );\r\n  }\r\n\r\n  getCategoryPlaylists(\r\n    categoryId: string,\r\n    params: SpotifyApi.SpotifyApiParams = {\r\n      limit: 50\r\n    }\r\n  ) {\r\n    return this.http\r\n      .get<SpotifyApi.CategoryPlaylistsReponse>(\r\n        `${this.browseUrl}/categories/${categoryId}/playlists`,\r\n        {\r\n          params\r\n        }\r\n      )\r\n      .pipe(\r\n        map((res) => {\r\n          return res.playlists;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n@Injectable()\r\nexport class AppComponent implements OnInit {\r\n  interval: number = 60 * 60 * 1000;\r\n  timer?: number;\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.timer = window.setInterval(\r\n      () => this.router.navigate(['/login']),\r\n      this.interval\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    clearInterval(this.timer);\r\n  }\r\n}\r\n","\r\n<router-outlet></router-outlet>\r\n","<div class=\"card-container\">\r\n  <mat-card class=\"example-card\" *ngFor=\"let item of showsItems\">\r\n    <mat-card-header class=\"search-header\"> {{ item.name }}</mat-card-header>\r\n    <img\r\n      mat-card-image\r\n      src=\"{{ item.images[0].url }}\"\r\n      class=\"search-images\"\r\n      alt=\"Photo of a Shiba Inu\"\r\n    />\r\n    <mat-card-content class=\"card-content\">\r\n      <p class=\"description\">Description : {{ item.description }}</p>\r\n      <!-- <p>Durée : {{ millisToMinutesAndSeconds(item.duration_ms) }} min</p> -->\r\n    </mat-card-content>\r\n    <mat-card-actions class=\"search-card-actions\">\r\n      <button mat-button class=\"search-buttons-actions\">Lien</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search-shows',\r\n  templateUrl: './search-shows.component.html',\r\n  styleUrls: ['./search-shows.component.scss']\r\n})\r\nexport class SearchShowsComponent implements OnInit {\r\n  @Input() showsItems: any;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Inject } from '@angular/core';\r\nimport { SpotifyServices } from 'src/app/services/spotify-services';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'pop-up',\r\n  templateUrl: './pop-up.component.html',\r\n  styleUrls: ['./pop-up.component.scss']\r\n})\r\nexport class PopUpAddToPlaylistsComponent implements OnInit {\r\n  isPlaylistData: boolean = false;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: { id: string; uri: string },\r\n    private spotifyServices: SpotifyServices\r\n  ) {}\r\n  activeState = '';\r\n  playlistData: any | undefined;\r\n  playlistIdSelected: string = '';\r\n\r\n  async ngOnInit() {\r\n    console.log(this.data.id);\r\n    this.spotifyServices\r\n      .getUserPlaylists()\r\n      .subscribe(\r\n        (userPlaylist) => (this.playlistData = (userPlaylist as any).items)\r\n      );\r\n    this.isPlaylistData = !this.isPlaylistData;\r\n  }\r\n  setStateAsActive(playlist: any, playlistId: string) {\r\n    this.activeState = playlist;\r\n    this.playlistIdSelected = playlistId;\r\n  }\r\n  addItem() {\r\n    console.log(\r\n      'playlistIdSelected =',\r\n      this.playlistIdSelected,\r\n      'uri =',\r\n      this.data.uri\r\n    );\r\n    this.spotifyServices.addItemToPlaylist(\r\n      this.playlistIdSelected,\r\n      this.data.uri\r\n    );\r\n  }\r\n}\r\n","<div *ngIf=\"isPlaylistData !== false\">\r\n  <h2 mat-dialog-title>Ajouter à une playlist</h2>\r\n  <h3>Choisissez une playlist !</h3>\r\n  <h3>Id ={{ data.id }}</h3>\r\n  <mat-dialog-content class=\"mat-typography\">\r\n    <div *ngFor=\"let playlist of playlistData\" style=\"width: 100%\">\r\n      <div\r\n        class=\"playlist-card\"\r\n        (click)=\"setStateAsActive(playlist, playlist.id)\"\r\n      >\r\n        <mat-card [class.active]=\"playlist === activeState\">\r\n          <mat-card-header>\r\n            <mat-card-title>{{ playlist.name }}</mat-card-title>\r\n            <mat-card-subtitle\r\n              ><span>Id :</span> {{ playlist.id }}</mat-card-subtitle\r\n            >\r\n            <mat-card-subtitle\r\n              ><span>Snapshot Id :</span>\r\n              {{ playlist.snapshot_id }}</mat-card-subtitle\r\n            >\r\n          </mat-card-header>\r\n\r\n          <img\r\n            mat-card-image\r\n            src=\"../../assets/no-image-icon.png\"\r\n            alt=\"Photo of a Shiba Inu\"\r\n          />\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close>Abandonner</button>\r\n    <button\r\n      mat-button\r\n      [mat-dialog-close]=\"true\"\r\n      cdkFocusInitial\r\n      (click)=\"addItem()\"\r\n    >\r\n      Valider\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SpotifyServices } from './services/spotify-services';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CreatePlaylistsComponent } from './create-playlists/create-playlists.component';\r\nimport { SearchComponent } from './search/search-component/search.component';\r\nimport { SongsComponent } from './songs/songs.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { CardsComponent } from './cards/cards.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { PlaylistsComponent } from './playlists/playlists.component';\r\nimport { SearchAlbumsComponent } from './search/search-albums/search-albums.component';\r\nimport { SearchTracksComponent } from './search/search-tracks/search-tracks.component';\r\nimport { SearchArtistsComponent } from './search/search-artists/search-artists.component';\r\nimport { SearchPlaylistsComponent } from './search/search-playlists/search-playlists.component';\r\nimport { SearchEpisodesComponent } from './search/search-episodes/search-episodes.component';\r\nimport { SearchShowsComponent } from './search/search-shows/search-shows.component';\r\nimport { SearchStepsButtonsComponent } from './search/search-steps-buttons/search-steps-buttons.component';\r\nimport { PlaylistsImagesComponent } from './create-playlists/playlists-images/playlists-images.component';\r\nimport { AddItemsToPlaylistsComponent } from './search/add-items-to-playlists/add-items-to-playlists.component';\r\nimport { PopUpAddToPlaylistsComponent } from './search/add-items-to-playlists/pop-up/pop-up.component';\r\nimport { PlaylistTracksModalComponent } from './playlists/playlist-tracks-modal/playlist-tracks-modal.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomepageComponent,\r\n    LoginComponent,\r\n    CreatePlaylistsComponent,\r\n    SearchComponent,\r\n    SongsComponent,\r\n    CardsComponent,\r\n    SidebarComponent,\r\n    PlaylistsComponent,\r\n    SearchAlbumsComponent,\r\n    SearchTracksComponent,\r\n    SearchArtistsComponent,\r\n    SearchPlaylistsComponent,\r\n    SearchEpisodesComponent,\r\n    SearchShowsComponent,\r\n    SearchStepsButtonsComponent,\r\n    PlaylistsImagesComponent,\r\n    AddItemsToPlaylistsComponent,\r\n    PopUpAddToPlaylistsComponent,\r\n    PlaylistTracksModalComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    MatSliderModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatButtonToggleModule,\r\n    MatSnackBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatExpansionModule,\r\n    MatDialogModule\r\n  ],\r\n  providers: [SpotifyServices],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SpotifyServices } from '../services/spotify-services';\r\nimport { ElementRef, ViewChild } from '@angular/core';\r\nimport {\r\n  debounceTime,\r\n  map,\r\n  distinctUntilChanged,\r\n  filter,\r\n  catchError\r\n} from 'rxjs/operators';\r\nimport { fromEvent, of } from 'rxjs';\r\n\r\nimport { FormControl } from '@angular/forms';\r\nimport { SpotifyApi } from 'src/app/models/@types';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PlaylistTracksModalComponent } from './playlist-tracks-modal/playlist-tracks-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-playlists',\r\n  templateUrl: './playlists.component.html',\r\n  styleUrls: ['./playlists.component.scss']\r\n})\r\nexport class PlaylistsComponent implements OnInit {\r\n  constructor(\r\n    private spotifyServices: SpotifyServices,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  tracksItem: any | undefined;\r\n  playlistData: any | undefined;\r\n\r\n  async ngOnInit() {\r\n    this.spotifyServices.getUserPlaylists().subscribe((userPlaylist) =>\r\n      (this.playlistData = (userPlaylist as any).items).map((playlist: any) => {\r\n        console.log(playlist);\r\n        console.log(this.playlistData);\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteItem(id: string, href: string) {\r\n    console.log(href);\r\n    this.spotifyServices.deletePlaylistItem(id).subscribe((res) => {\r\n      console.log(res);\r\n      this.removePlaylistFromUi(href);\r\n    });\r\n  }\r\n\r\n  removePlaylistFromUi(href: string) {\r\n    this.playlistData = this.playlistData.filter(\r\n      (playlist: any) => playlist.tracks.href !== href\r\n    );\r\n  }\r\n\r\n  displayTracks(\r\n    playlistId: string,\r\n    playlistName: string,\r\n    playlistSnapShotId: string\r\n  ) {\r\n    this.spotifyServices.getPlaylistsItems(playlistId).subscribe((res) => {\r\n      this.tracksItem = res;\r\n      console.log(this.tracksItem);\r\n      this.openDialog(\r\n        this.tracksItem,\r\n        playlistName,\r\n        playlistId,\r\n        playlistSnapShotId\r\n      );\r\n    });\r\n  }\r\n\r\n  openDialog(\r\n    playlistTracksData: any,\r\n    playlistNameData: any,\r\n    playlistId: any,\r\n    playlistSnapShotId: any\r\n  ) {\r\n    const dialogRef = this.dialog.open(PlaylistTracksModalComponent, {\r\n      data: {\r\n        playlistTracksData: playlistTracksData,\r\n        playlistNameData: playlistNameData,\r\n        playlistId: playlistId,\r\n        playlistSnapShotId: playlistSnapShotId\r\n      }\r\n    });\r\n    console.log('from child dialog :', playlistTracksData);\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n    return dialogRef;\r\n  }\r\n}\r\n","<app-sidebar></app-sidebar>\r\n\r\n<div class=\"wrapper\">\r\n  <div *ngIf=\"playlistData !== undefined\" class=\"playlists-container\">\r\n    <div *ngFor=\"let playlist of playlistData\" class=\"card-wrapper\">\r\n      <mat-card class=\"example-card\">\r\n        <mat-card-header>\r\n          <mat-card-title\r\n            ><span class=\"card-item\">Name :</span>\r\n            {{ playlist.name }}</mat-card-title\r\n          >\r\n          <mat-card-subtitle\r\n            ><span class=\"card-item\">Description :</span>\r\n            {{ playlist.description }}</mat-card-subtitle\r\n          >\r\n          <mat-card-subtitle\r\n            ><span class=\"card-item\">Id :</span>\r\n            {{ playlist.id }}</mat-card-subtitle\r\n          >\r\n          <mat-card-subtitle\r\n            ><span class=\"card-item\">Owner Uri :</span>\r\n            {{ playlist.owner.uri }}</mat-card-subtitle\r\n          >\r\n          <mat-card-subtitle\r\n            ><span class=\"card-item\">Snapshot Id :</span>\r\n            {{ playlist.snapshot_id }}</mat-card-subtitle\r\n          >\r\n        </mat-card-header>\r\n        <div class=\"image-container\">\r\n          <img\r\n            mat-card-image\r\n            src=\"../../assets/no-image-icon.png\"\r\n            alt=\"Photo of a Shiba Inu\"\r\n          />\r\n        </div>\r\n        <mat-card-content>\r\n          <p>Tracks:</p>\r\n          <button\r\n            mat-button\r\n            color=\"primary\"\r\n            [disabled]=\"(playlist.tracks.total | json) <= '0'\"\r\n            (click)=\"\r\n              displayTracks(playlist.id, playlist.name, playlist.snapshot_id)\r\n            \"\r\n          >\r\n            Titres\r\n          </button>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            (click)=\"deleteItem(playlist.id, playlist.tracks.href)\"\r\n          >\r\n            Remove\r\n          </button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Inject } from '@angular/core';\r\nimport { SpotifyServices } from 'src/app/services/spotify-services';\r\n\r\n@Component({\r\n  selector: 'app-playlist-tracks-modal',\r\n  templateUrl: './playlist-tracks-modal.component.html',\r\n  styleUrls: ['./playlist-tracks-modal.component.scss']\r\n})\r\nexport class PlaylistTracksModalComponent implements OnInit {\r\n  isPlaylistData: boolean = false;\r\n  playlistTracksData: any | undefined;\r\n  playlistName: string | undefined;\r\n  playlistId: string | undefined;\r\n  playlistSnapShotId: string | undefined;\r\n\r\n  constructor(\r\n    private spotifyServices: SpotifyServices,\r\n    @Inject(MAT_DIALOG_DATA)\r\n    public data: {\r\n      playlistTracksData: any;\r\n      playlistNameData: string;\r\n      playlistId: string;\r\n      playlistSnapShotId: string;\r\n    }\r\n  ) {}\r\n\r\n  activeState = '';\r\n  playlistData: any | undefined;\r\n  playlistIdSelected: string = '';\r\n\r\n  async ngOnInit() {\r\n    console.log(this.data.playlistTracksData);\r\n    this.playlistTracksData = this.data.playlistTracksData;\r\n    this.playlistName = this.data.playlistNameData;\r\n    this.isPlaylistData = !this.isPlaylistData;\r\n    this.playlistId = this.data.playlistId;\r\n    this.playlistSnapShotId = this.data.playlistSnapShotId;\r\n  }\r\n\r\n  deleteTrack(\r\n    playlistId: string | undefined,\r\n    trackUri: string,\r\n    playlistSnapShotId: string | undefined,\r\n    trackId: string\r\n  ) {\r\n    this.spotifyServices.removePlaylistItem(\r\n      playlistId,\r\n      trackUri,\r\n      playlistSnapShotId\r\n    );\r\n\r\n    this.removeTrackFromUi(trackId);\r\n  }\r\n\r\n  removeTrackFromUi(trackId: string) {\r\n    this.playlistTracksData.items = Object.values(\r\n      this.playlistTracksData.items\r\n    ).filter((playlist: any) => playlist.track.id !== trackId);\r\n  }\r\n\r\n  msToMinutesAndSeconds = (ms: number) => {\r\n    const minutes = Math.floor(ms / 60000);\r\n    const seconds = ((ms % 60000) / 1000).toFixed(0);\r\n\r\n    return `${minutes}:${seconds < '10' ? '0' : ''}${seconds}`;\r\n  };\r\n}\r\n","<div\r\n  *ngIf=\"playlistTracksData !== undefined\"\r\n  class=\"playlist-tracks-modal-container\"\r\n>\r\n  <h2 mat-dialog-title>{{ playlistName }}</h2>\r\n\r\n  <mat-dialog-content class=\"mat-typography\">\r\n    <div class=\"playlist-tracks-header\">\r\n      <span class=\"tracks-header\"> Titre </span>\r\n      <span class=\"tracks-header\"> Artist </span>\r\n      <span class=\"tracks-header\"> Album </span>\r\n      <span class=\"tracks-header\"> Durée </span>\r\n    </div>\r\n    <div *ngFor=\"let playlist of playlistTracksData.items\">\r\n      <div class=\"playlist-tracks-container\">\r\n        <span class=\"tracks-logo\"\r\n          ><img src=\"{{ playlist.track.album.images[2].url }}\"\r\n        /></span>\r\n        <span class=\"tracks-items\">{{ playlist.track.name }}</span>\r\n        <span class=\"tracks-items\">{{ playlist.track.artists[0].name }}</span>\r\n        <span class=\"tracks-items\">{{ playlist.track.album.name }}</span>\r\n        <span class=\"tracks-items\">{{\r\n          msToMinutesAndSeconds(playlist.track.duration_ms)\r\n        }}</span>\r\n        <button\r\n          mat-raised-button\r\n          style=\"width: 20%\"\r\n          color=\"warn\"\r\n          (click)=\"\r\n            deleteTrack(\r\n              playlistId,\r\n              playlist.track.uri,\r\n              playlistSnapShotId,\r\n              playlist.track.id\r\n            )\r\n          \"\r\n        >\r\n          Remove\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </mat-dialog-content>\r\n</div>\r\n","import { style } from '@angular/animations';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'error-message',\r\n  templateUrl: './error-message.html',\r\n  styles: [\r\n    `\r\n      .message {\r\n        color: red;\r\n        font-weight: 600;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class ErrorMessageComponent {}\r\n","<span class=\"message\">\r\n Cette playlist a déjà été crée !\r\n</span>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-songs',\r\n  templateUrl: './songs.component.html',\r\n  styleUrls: ['./songs.component.scss']\r\n})\r\nexport class SongsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Soon ;)!</p>\r\n","import { ActivatedRoute, UrlTree } from '@angular/router';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { SpotifyApi, finalSpotifyApi } from '../models/@types';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SpotifyServices {\r\n  code: string | undefined;\r\n  uri: string = environment.uri;\r\n  baseURL: string = 'https://accounts.spotify.com/api/token';\r\n  redirect_uri: string = `${this.uri}homepage`;\r\n  token: SpotifyApi.IToken | undefined;\r\n  accessToken: string | undefined;\r\n  refreshToken: string | undefined;\r\n  newToken: string | undefined;\r\n  errorMessage: string | undefined;\r\n  search: string = 'https://api.spotify.com/v1/search';\r\n  clientSecret: string = environment.clientSecret;\r\n  authorizeUri: string = environment.authorizeUri;\r\n  clientId: string = environment.clientId;\r\n  scopes: string[] = environment.SCOPES;\r\n  browseUrl = 'https://api.spotify.com/v1/browse';\r\n  tokenValue: boolean = true;\r\n\r\n  constructor(private route: ActivatedRoute, private http: HttpClient) {}\r\n\r\n  login() {\r\n    const params = new URLSearchParams({\r\n      client_id: this.clientId,\r\n      redirect_uri: this.redirect_uri,\r\n      scope: encodeURIComponent(this.scopes.join(' ')),\r\n      response_type: 'code'\r\n    });\r\n    window.location = `${this.authorizeUri}?${params.toString()}` as any;\r\n  }\r\n\r\n  getToken() {\r\n    this.route.queryParams.subscribe((params) => {\r\n      this.code = params['code'];\r\n    });\r\n    const encodedClientDetails = btoa(this.clientId + ':' + this.clientSecret);\r\n\r\n    const headers = new HttpHeaders()\r\n      .set('Content-Type', 'application/x-www-form-urlencoded')\r\n      .set('Authorization', 'Basic ' + encodedClientDetails);\r\n\r\n    let body = 'grant_type=authorization_code';\r\n    body += '&code=' + this.code;\r\n    body += '&redirect_uri=' + `${this.uri}homepage`;\r\n\r\n    this.http.post<any>(this.baseURL, body, { headers }).subscribe({\r\n      next: (data: SpotifyApi.IToken) => {\r\n        this.token = data;\r\n        this.accessToken = data.access_token;\r\n        this.refreshToken = data.refresh_token;\r\n        localStorage.setItem('access_token', this.accessToken);\r\n        localStorage.setItem('refresh_token', this.refreshToken);\r\n      },\r\n      error: (error: Error) => {\r\n        this.errorMessage = error.message;\r\n        console.error('There was an error!', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  getFeaturedPlaylists(value: string) {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('Authorization', `Bearer ${accessToken}`);\r\n\r\n    return this.http.get<SpotifyApi.ListOfFeaturedPlaylistsResponse>(value, {\r\n      headers\r\n    });\r\n  }\r\n\r\n  getAllCategories(value: string) {\r\n    const accessToken = localStorage.getItem('access_token');\r\n\r\n    const headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('Authorization', `Bearer ${accessToken}`);\r\n\r\n    return this.http.get<SpotifyApi.MultipleCategoriesResponse>(value, {\r\n      headers\r\n    });\r\n  }\r\n\r\n  getAllNewReleases(value: string) {\r\n    const accessToken = localStorage.getItem('access_token');\r\n\r\n    const headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('Authorization', `Bearer ${accessToken}`);\r\n\r\n    return this.http.get<SpotifyApi.MultipleCategoriesResponse>(value, {\r\n      headers\r\n    });\r\n  }\r\n\r\n  getCategoryPlaylists(\r\n    categoryId: string,\r\n    params: SpotifyApi.SpotifyApiParams = {\r\n      limit: 50\r\n    }\r\n  ) {\r\n    return this.http\r\n      .get<SpotifyApi.CategoryPlaylistsReponse>(\r\n        `${this.browseUrl}/categories/${categoryId}/playlists`,\r\n        {\r\n          params\r\n        }\r\n      )\r\n      .pipe(\r\n        map((res) => {\r\n          return res.playlists;\r\n        })\r\n      );\r\n  }\r\n\r\n  getUserFavouriteArtists() {\r\n    const accessToken = localStorage.getItem('access_token');\r\n\r\n    const headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('Authorization', `Bearer ${accessToken}`);\r\n\r\n    return this.http.get<SpotifyApi.MultipleCategoriesResponse>(\r\n      `https://api.spotify.com/v1/me/following?type=artist`,\r\n      {\r\n        headers\r\n      }\r\n    );\r\n  }\r\n\r\n  searchForAnItem(term: string) {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('Authorization', `Bearer ${accessToken}`);\r\n\r\n    const params = new HttpParams()\r\n      .set('q', term)\r\n      .set('type', 'album,artist,playlist,track,show,episode');\r\n    const httpOptions = {\r\n      headers: headers,\r\n      params: params\r\n    };\r\n    if (term === '') {\r\n      return of([]);\r\n    }\r\n    return this.http.get(this.search, httpOptions);\r\n  }\r\n\r\n  searchOtherResult(value: string) {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('Authorization', `Bearer ${accessToken}`);\r\n\r\n    return this.http.get(value, { headers }).pipe(\r\n      map((res) => {\r\n        console.log(res);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getUse() {\r\n    const accessToken = localStorage.getItem('access_token');\r\n\r\n    const headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('Authorization', `Bearer ${accessToken}`);\r\n\r\n    this.http\r\n      .get<finalSpotifyApi.CurrentUsersProfileResponse>(\r\n        'https://api.spotify.com/v1/me',\r\n        { headers }\r\n      )\r\n      .subscribe((res) => res);\r\n  }\r\n\r\n  getUserPlaylists() {\r\n    const accessToken = localStorage.getItem('access_token');\r\n\r\n    const headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('Authorization', `Bearer ${accessToken}`);\r\n\r\n    const userId = '2gwf4f6zz8ginkw7v9v3e3tmx';\r\n\r\n    return this.http.get<finalSpotifyApi.ListOfCurrentUsersPlaylistsResponse>(\r\n      `https://api.spotify.com/v1/users/${userId}/playlists`,\r\n      {\r\n        headers\r\n      }\r\n    );\r\n  }\r\n\r\n  getPlaylistsItems(playlist_id: string) {\r\n    const accessToken = localStorage.getItem('access_token');\r\n\r\n    const headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('Authorization', `Bearer ${accessToken}`);\r\n\r\n    return this.http.get(\r\n      `https://api.spotify.com/v1/playlists/${playlist_id}/tracks`,\r\n      {\r\n        headers\r\n      }\r\n    );\r\n  }\r\n\r\n  addItemToPlaylist(playlistId: string, itemUri: string) {\r\n    const accessToken = localStorage.getItem('access_token');\r\n\r\n    const headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('Authorization', `Bearer ${accessToken}`);\r\n\r\n    const params = {\r\n      uris: [itemUri]\r\n    };\r\n\r\n    return this.http\r\n      .post<finalSpotifyApi.AddTracksToPlaylistResponse>(\r\n        `https://api.spotify.com/v1/playlists/${playlistId}/tracks/`,\r\n        params,\r\n        { headers }\r\n      )\r\n      .subscribe((res) => {\r\n        console.log('ADDiTEM =', res);\r\n      });\r\n  }\r\n\r\n  removePlaylistItem(\r\n    playlist_id: string | undefined,\r\n    trackUri: string | undefined,\r\n    playlistSnapShotId: string | undefined\r\n  ) {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('Authorization', `Bearer ${accessToken}`);\r\n    console.log(\r\n      'playlistId  is =' +\r\n        playlist_id +\r\n        '   trackUri  is= ' +\r\n        trackUri +\r\n        'snapshotId =' +\r\n        playlistSnapShotId\r\n    );\r\n    const params = {\r\n      tracks: [{ uri: trackUri }],\r\n      snapshot_id: playlistSnapShotId\r\n    };\r\n\r\n    const options = {\r\n      headers: headers,\r\n      body: params\r\n    };\r\n\r\n    return this.http\r\n      .delete(\r\n        `https://api.spotify.com/v1/playlists/${playlist_id}/tracks`,\r\n        options\r\n      )\r\n      .subscribe((res) => {\r\n        return res;\r\n      });\r\n  }\r\n\r\n  createPlaylist(playlistName: string, playlistDescription: string) {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const userPlaylistId = '2gwf4f6zz8ginkw7v9v3e3tmx';\r\n\r\n    const headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('Authorization', `Bearer ${accessToken}`);\r\n\r\n    const postData = {\r\n      name: playlistName,\r\n      description: playlistDescription,\r\n      public: false\r\n    };\r\n\r\n    const body = JSON.stringify(postData);\r\n\r\n    return this.http\r\n      .post(\r\n        `https://api.spotify.com/v1/users/${userPlaylistId}/playlists`,\r\n        body,\r\n        { headers }\r\n      )\r\n      .pipe(\r\n        map((res) => {\r\n          console.log(res);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  deletePlaylistItem(id: string) {\r\n    const accessToken = localStorage.getItem('access_token');\r\n\r\n    const headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('Authorization', `Bearer ${accessToken}`);\r\n\r\n    return this.http\r\n      .delete(`https://api.spotify.com/v1/playlists/${id}/followers`, {\r\n        headers\r\n      })\r\n      .pipe(\r\n        map((res) => {\r\n          console.log(res);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n  // stay to fix some issues on this method below\r\n  getPlaylistCoverImage(playlistId: string, url: string) {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('Authorization', `Bearer ${accessToken}`);\r\n\r\n    const postData = btoa(url);\r\n    console.log(postData);\r\n\r\n    return this.http\r\n      .put(\r\n        `https://api.spotify.com/v1/playlists/${playlistId}/images`,\r\n        postData,\r\n        {\r\n          headers\r\n        }\r\n      )\r\n      .pipe(\r\n        map((res) => {\r\n          console.log('getPlaylistCoverImage =', res);\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search-tracks',\r\n  templateUrl: './search-tracks.component.html',\r\n  styleUrls: ['./search-tracks.component.scss']\r\n})\r\nexport class SearchTracksComponent implements OnInit {\r\n  @Input() tracksItems: any;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  @Output() newItemEvent = new EventEmitter<string>();\r\n\r\n  @Output() newItemUriEvent = new EventEmitter<string>();\r\n\r\n  addNewItemId(id: string) {\r\n    this.newItemEvent.emit(id);\r\n  }\r\n\r\n  addItemUri(uri: string) {\r\n    this.newItemUriEvent.emit(uri);\r\n  }\r\n}\r\n","<div class=\"card-container\">\r\n  <mat-card class=\"example-card\" *ngFor=\"let item of tracksItems\">\r\n    <mat-card-header class=\"search-header\">\r\n      <mat-card-title class=\"search-titles\">{{\r\n        item.artists[0].name\r\n      }}</mat-card-title>\r\n      <mat-card-subtitle class=\"search-titles\">{{\r\n        item.name\r\n      }}</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <img\r\n      mat-card-image\r\n      src=\"{{ item.album.images[0].url }}\"\r\n      class=\"search-images\"\r\n      alt=\"Photo of a Shiba Inu\"\r\n    />\r\n    <mat-card-content class=\"card-content\">\r\n      <p>Popularité : {{ item.popularity }}</p>\r\n      <p>Numéro de piste: {{ item.track_number }}</p>\r\n    </mat-card-content>\r\n    <mat-card-actions class=\"search-card-actions\">\r\n      <button mat-button class=\"search-buttons-actions\">Lien</button>\r\n      <app-add-items-to-playlists\r\n        [selectedId]=\"item.id\"\r\n        [selectedUri]=\"item.uri\"\r\n      ></app-add-items-to-playlists>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SearchComponent } from './search/search-component/search.component';\r\nimport { CreatePlaylistsComponent } from './create-playlists/create-playlists.component';\r\nimport { SongsComponent } from './songs/songs.component';\r\nimport { PlaylistsComponent } from './playlists/playlists.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'homepage', component: HomepageComponent },\r\n  { path: 'search', component: SearchComponent },\r\n  { path: 'create-playlists', component: CreatePlaylistsComponent },\r\n  { path: 'playlists', component: PlaylistsComponent },\r\n  { path: 'songs', component: SongsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../services/authentication-service';\r\nimport { SpotifyServices } from '../services/spotify-services';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl = '';\r\n  error = '';\r\n  responseData1: any;\r\n  responseData2: any;\r\n\r\n  constructor(\r\n    public authenticationService: AuthenticationService,\r\n    public spotifyService: SpotifyServices\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  started() {\r\n    // this.spotifyService.login();\r\n    //  this.spotifyService.getToken();\r\nthis.authenticationService\r\n   .requestDataFromMultipleSources()\r\n  .subscribe((responseList: any) => {\r\n    this.responseData1 = responseList[0];\r\n  this.responseData2 = responseList[1];\r\n  }); \r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <div class=\"login-card\">\r\n    <div>\r\n      <div><h1>Spotify application</h1></div>\r\n      <div class=\"spotify-icon-container\">\r\n        <i class=\"fab fa-spotify fa-5x icon-color\"></i>\r\n      </div>\r\n      <button mat-raised-button color=\"primary\" (click)=\"started()\">\r\n        Login to Spotify Account\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { SpotifyServices } from '../services/spotify-services';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ErrorMessageComponent } from './error-message';\r\nimport { SpotifyApi } from '../models/@types';\r\n\r\n@Component({\r\n  selector: 'app-create-playlists',\r\n  templateUrl: './create-playlists.component.html',\r\n  styleUrls: ['./create-playlists.component.scss']\r\n})\r\nexport class CreatePlaylistsComponent implements OnInit {\r\n  create: boolean = false;\r\n  playlistForm!: FormGroup;\r\n  name!: string;\r\n  description!: string;\r\n  returnedPlaylist!: SpotifyApi.IReturnedPLaylist;\r\n  playlistId: string | undefined;\r\n\r\n  tracksItem: string[] = [];\r\n  playlistIsExisting: boolean = false;\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private spotifyService: SpotifyServices,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  reactiveForm() {\r\n    this.playlistForm = this.fb.group({\r\n      name: ['', [Validators.required]],\r\n      description: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.reactiveForm();\r\n  }\r\n\r\n  submitPlaylist(): void {\r\n    if (this.playlistForm !== undefined && this.playlistForm.valid) {\r\n      this.spotifyService\r\n        .createPlaylist(this.playlistName, this.playlistDescription)\r\n        .subscribe(\r\n          (res: any) => {\r\n            this.returnedPlaylist = res;\r\n            this.playlistId = res.id;\r\n            console.log(typeof this.playlistId);\r\n          },\r\n          (err: Error) => {\r\n            console.error(err);\r\n          }\r\n        );\r\n    }\r\n  }\r\n  get playlistName() {\r\n    return this.playlistForm.get('name')?.value;\r\n  }\r\n  get playlistDescription() {\r\n    return this.playlistForm.get('description')?.value;\r\n  }\r\n  createAction() {\r\n    this.create = !this.create;\r\n  }\r\n  getUserInfo() {\r\n    this.spotifyService.getUse();\r\n  }\r\n\r\n  getUserPlaylists() {\r\n    this.spotifyService.getUserPlaylists();\r\n  }\r\n\r\n  setToLocalStorage() {\r\n    let playlistsData: SpotifyApi.IReturnedPLaylist[] | null = JSON.parse(\r\n      localStorage.getItem('playlistArray') || '{}'\r\n    );\r\n    if (playlistsData == null) playlistsData = [];\r\n\r\n    localStorage.setItem('entry', JSON.stringify(this.returnedPlaylist));\r\n\r\n    const playlistnotExist = !playlistsData.some(\r\n      (p) => p.id === this.returnedPlaylist!.id\r\n    );\r\n\r\n    playlistnotExist\r\n      ? playlistsData.push(this.returnedPlaylist)\r\n      : this.openSnackBar();\r\n\r\n    localStorage.setItem('playlistArray', JSON.stringify(playlistsData));\r\n  }\r\n\r\n  openSnackBar() {\r\n    this.snackBar.openFromComponent(ErrorMessageComponent, {\r\n      duration: 2000\r\n    });\r\n  }\r\n\r\n  remove(element: any) {\r\n    this.returnedPlaylist = element;\r\n    element.remove();\r\n  }\r\n}\r\n","<app-sidebar></app-sidebar>\r\n<div class=\"wrapper\">\r\n  <div class=\"form-wrapper\">\r\n    <div class=\"playlist-form\">\r\n      <button\r\n        mat-button\r\n        class=\"create-playlist-button\"\r\n        (click)=\"createAction()\"\r\n      >\r\n        Créer une playlist\r\n      </button>\r\n      <form\r\n        *ngIf=\"create\"\r\n        [formGroup]=\"playlistForm\"\r\n        (ngSubmit)=\"submitPlaylist()\"\r\n        novalidate\r\n      >\r\n        <mat-form-field class=\"form-fields\">\r\n          <input matInput placeholder=\"Name\" formControlName=\"name\" />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"form-fields\">\r\n          <input\r\n            matInput\r\n            placeholder=\"Description\"\r\n            formControlName=\"description\"\r\n          />\r\n        </mat-form-field>\r\n        <div>\r\n          <button\r\n            mat-button\r\n            [disabled]=\"!playlistForm.valid\"\r\n            class=\"create-playlist-button\"\r\n            type=\"submit\"\r\n          >\r\n            Valider\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div class=\"playlists\">\r\n    <div style=\"height: 100%; width: 100%; display: flex\">\r\n      <div\r\n        style=\"\r\n          width: 50%;\r\n          height: calc(100% - 64 px);\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: center;\r\n        \"\r\n      >\r\n        <app-playlists-images\r\n          [playlistId]=\"playlistId\"\r\n          style=\"display: flex; flex-direction: column; justify-content: center\"\r\n        ></app-playlists-images>\r\n      </div>\r\n\r\n      <div\r\n        *ngIf=\"returnedPlaylist\"\r\n        style=\"\r\n          width: 50%;\r\n          height: 100%;\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: center;\r\n          align-items: center;\r\n        \"\r\n      >\r\n        <mat-card class=\"example-card\">\r\n          <mat-card-header>\r\n            <mat-card-title\r\n              ><span class=\"card-item\">Name :</span>\r\n              {{ returnedPlaylist.name }}</mat-card-title\r\n            >\r\n            <mat-card-subtitle\r\n              ><span class=\"card-item\">Description :</span>\r\n              {{ returnedPlaylist.description }}</mat-card-subtitle\r\n            >\r\n            <mat-card-subtitle\r\n              ><span class=\"card-item\">Id :</span>\r\n              {{ returnedPlaylist.id }}</mat-card-subtitle\r\n            >\r\n            <mat-card-subtitle\r\n              ><span class=\"card-item\">Owner Uri :</span>\r\n              {{ returnedPlaylist.owner.uri }}</mat-card-subtitle\r\n            >\r\n            <mat-card-subtitle\r\n              ><span class=\"card-item\">Snapshot Id :</span>\r\n              {{ returnedPlaylist.snapshot_id }}</mat-card-subtitle\r\n            >\r\n          </mat-card-header>\r\n          <div class=\"image-container\">\r\n            <img\r\n              mat-card-image\r\n              src=\"../../assets/no-image-icon.png\"\r\n              alt=\"Photo of a Shiba Inu\"\r\n            />\r\n          </div>\r\n          <mat-card-content>\r\n            <p>\r\n              Tracks :\r\n              {{\r\n                tracksItem.length > 0\r\n                  ? returnedPlaylist.tracks.items\r\n                  : 'no Tracks'\r\n              }}\r\n            </p>\r\n          </mat-card-content>\r\n          <mat-card-actions>\r\n            <button\r\n              mat-raised-button\r\n              color=\"primary\"\r\n              (click)=\"setToLocalStorage()\"\r\n            >\r\n              Add\r\n            </button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"remove(this)\">\r\n              Remove\r\n            </button>\r\n          </mat-card-actions>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}